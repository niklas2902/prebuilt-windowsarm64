name: Build Python 3.12.4 for Windows ARM64

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-python-windows-arm64:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Visual Studio environment
      uses: microsoft/setup-msbuild@v2
      with:
        vs-version: 'latest'
    
    - name: Install Visual Studio ARM64 components
      shell: pwsh
      run: |
        # Install Visual Studio Build Tools with ARM64 support
        # Note: This assumes VS is already installed on the runner
        Write-Host "Visual Studio should already have ARM64 tools on windows-latest runner"
    
    - name: Download Python 3.12.4 source
      shell: pwsh
      run: |
        $url = "https://www.python.org/ftp/python/3.12.4/Python-3.12.4.tgz"
        Write-Host "Downloading Python 3.12.4 source..."
        Invoke-WebRequest -Uri $url -OutFile "Python-3.12.4.tgz"
        
        # Extract using tar (available in Windows 10+)
        tar -xzf Python-3.12.4.tgz
        
        Write-Host "Python source extracted successfully"
    
    - name: Build Python for ARM64
      shell: cmd
      run: |
        cd Python-3.12.4\PCbuild
        
        echo "Building Python 3.12.4 for Windows ARM64..."
        
        REM Build for ARM64 platform
        build.bat -p ARM64 -c Release
    
    - name: Package Python ARM64 build
      shell: pwsh
      run: |
        $buildDir = "Python-3.12.4\PCbuild\arm64"
        $outputDir = "python-3.12.4-win-arm64"
        
        Write-Host "Packaging Python ARM64 binaries..."
        
        # Create output directory structure
        New-Item -ItemType Directory -Force -Path $outputDir
        New-Item -ItemType Directory -Force -Path "$outputDir\DLLs"
        New-Item -ItemType Directory -Force -Path "$outputDir\Lib"
        New-Item -ItemType Directory -Force -Path "$outputDir\libs"
        New-Item -ItemType Directory -Force -Path "$outputDir\include"
        
        # Copy binaries
        Copy-Item "$buildDir\*.exe" -Destination $outputDir -ErrorAction SilentlyContinue
        Copy-Item "$buildDir\*.dll" -Destination $outputDir -ErrorAction SilentlyContinue
        Copy-Item "$buildDir\*.pyd" -Destination "$outputDir\DLLs" -ErrorAction SilentlyContinue
        
        # Copy libs
        Copy-Item "$buildDir\*.lib" -Destination "$outputDir\libs" -ErrorAction SilentlyContinue
        
        # Copy standard library
        Copy-Item "Python-3.12.4\Lib\*" -Destination "$outputDir\Lib" -Recurse -Force
        
        # Copy include files
        Copy-Item "Python-3.12.4\Include\*" -Destination "$outputDir\include" -Recurse -Force
        Copy-Item "Python-3.12.4\PC\pyconfig.h" -Destination "$outputDir\include" -Force
        
        # Create zip archive
        Compress-Archive -Path $outputDir -DestinationPath "python-3.12.4-win-arm64.zip"
        
        Write-Host "Build packaged successfully"
    
    - name: Upload Python ARM64 artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-3.12.4-windows-arm64
        path: python-3.12.4-win-arm64.zip
        retention-days: 30
    
    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: Python-3.12.4/PCbuild/*.log
        retention-days: 7
        if-no-files-found: ignore
